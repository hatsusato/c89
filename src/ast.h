#ifndef INCLUDE_GUARD_A84E9F8A_C152_4807_9181_80EE16B4DFA5
#define INCLUDE_GUARD_A84E9F8A_C152_4807_9181_80EE16B4DFA5

#include "utility.h"

enum AstTag {
  AST_NIL,
  AST_IDENTIFIER,
  AST_CONSTANT,
  AST_FLOATING_CONSTANT,
  AST_INTEGER_CONSTANT,
  AST_ENUMERATION_CONSTANT,
  AST_CHARACTER_CONSTANT,
  AST_STRING_LITERAL,
  AST_PRIMARY_EXPRESSION,
  AST_POSTFIX_EXPRESSION,
  AST_POSTFIX_OPERATOR,
  AST_POSTFIX_ARRAY,
  AST_POSTFIX_CALL,
  AST_POSTFIX_CALL_ARGS,
  AST_POSTFIX_MEMBER,
  AST_POSTFIX_ARROW,
  AST_POSTFIX_INCR,
  AST_POSTFIX_DECR,
  AST_ARGUMENT_EXPRESSION_LIST,
  AST_UNARY_EXPRESSION,
  AST_UNARY_OPERATOR,
  AST_UNARY_INCR,
  AST_UNARY_DECR,
  AST_UNARY_AMPER,
  AST_UNARY_ASTER,
  AST_UNARY_PLUS,
  AST_UNARY_MINUS,
  AST_UNARY_TILDE,
  AST_UNARY_EXCL,
  AST_UNARY_SIZEOF,
  AST_UNARY_SIZEOF_TYPE,
  AST_CAST_EXPRESSION,
  AST_MULTIPLICATIVE_EXPRESSION,
  AST_MULTIPLICATIVE_OPERATOR,
  AST_ADDITIVE_EXPRESSION,
  AST_ADDITIVE_OPERATOR,
  AST_SHIFT_EXPRESSION,
  AST_SHIFT_OPERATOR,
  AST_RELATIONAL_EXPRESSION,
  AST_RELATIONAL_OPERATOR,
  AST_EQUALITY_EXPRESSION,
  AST_EQUALITY_OPERATOR,
  AST_AND_EXPRESSION,
  AST_EXCLUSIVE_OR_EXPRESSION,
  AST_INCLUSIVE_OR_EXPRESSION,
  AST_LOGICAL_AND_EXPRESSION,
  AST_LOGICAL_OR_EXPRESSION,
  AST_CONDITIONAL_EXPRESSION,
  AST_ASSIGNMENT_EXPRESSION,
  AST_ASSIGNMENT_OPERATOR,
  AST_EXPRESSION,
  AST_CONSTANT_EXPRESSION,
  AST_TYPE_NAME
};

const char* ast_show(int);
boolean ast_is_token(int);

#endif /* INCLUDE_GUARD_A84E9F8A_C152_4807_9181_80EE16B4DFA5 */
